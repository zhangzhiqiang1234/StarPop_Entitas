//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GainScoreComponent gainScore { get { return (GainScoreComponent)GetComponent(GameComponentsLookup.GainScore); } }
    public bool hasGainScore { get { return HasComponent(GameComponentsLookup.GainScore); } }

    public void AddGainScore(int newStarNum) {
        var index = GameComponentsLookup.GainScore;
        var component = (GainScoreComponent)CreateComponent(index, typeof(GainScoreComponent));
        component.starNum = newStarNum;
        AddComponent(index, component);
    }

    public void ReplaceGainScore(int newStarNum) {
        var index = GameComponentsLookup.GainScore;
        var component = (GainScoreComponent)CreateComponent(index, typeof(GainScoreComponent));
        component.starNum = newStarNum;
        ReplaceComponent(index, component);
    }

    public void RemoveGainScore() {
        RemoveComponent(GameComponentsLookup.GainScore);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGainScore;

    public static Entitas.IMatcher<GameEntity> GainScore {
        get {
            if (_matcherGainScore == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GainScore);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGainScore = matcher;
            }

            return _matcherGainScore;
        }
    }
}
