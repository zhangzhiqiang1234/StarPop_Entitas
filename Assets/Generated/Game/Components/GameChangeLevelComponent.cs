//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChangeLevelComponent changeLevel { get { return (ChangeLevelComponent)GetComponent(GameComponentsLookup.ChangeLevel); } }
    public bool hasChangeLevel { get { return HasComponent(GameComponentsLookup.ChangeLevel); } }

    public void AddChangeLevel(bool newIsExit) {
        var index = GameComponentsLookup.ChangeLevel;
        var component = (ChangeLevelComponent)CreateComponent(index, typeof(ChangeLevelComponent));
        component.isExit = newIsExit;
        AddComponent(index, component);
    }

    public void ReplaceChangeLevel(bool newIsExit) {
        var index = GameComponentsLookup.ChangeLevel;
        var component = (ChangeLevelComponent)CreateComponent(index, typeof(ChangeLevelComponent));
        component.isExit = newIsExit;
        ReplaceComponent(index, component);
    }

    public void RemoveChangeLevel() {
        RemoveComponent(GameComponentsLookup.ChangeLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChangeLevel;

    public static Entitas.IMatcher<GameEntity> ChangeLevel {
        get {
            if (_matcherChangeLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChangeLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChangeLevel = matcher;
            }

            return _matcherChangeLevel;
        }
    }
}
